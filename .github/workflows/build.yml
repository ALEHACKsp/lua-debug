name: build
on: [push]
jobs:
  compile:
    runs-on: ${{ matrix.image }}
    strategy:
      matrix:
        os: [windows-x86, windows-x64, linux, macos]
        include:
        - os: windows-x86
          image: windows-latest
          plat: msvc
          arch: x86
        - os: windows-x64
          image: windows-latest
          plat: msvc
          arch: x64
        - os: linux
          image: ubuntu-latest
          plat: linux
        - os: macos
          image: macos-latest
          plat: macos
    steps:
    - uses: actions/checkout@v1
      with:
        ref: refs/heads/master
        submodules : recursive
    - if: runner.os == 'Linux'
      run: sudo apt-get install -y libreadline-dev ninja-build
    - if: runner.os == 'macOS'
      run: brew install ninja
    - run: git clone --recurse-submodules -j8 --depth 1 https://github.com/actboy168/luamake
    - if: runner.os != 'Windows'
      run: ninja -f ninja/${{ matrix.plat }}.ninja
      working-directory: luamake
    - if: runner.os == 'Windows'
      run: .\msvc_build.bat
      working-directory: luamake
    - run: ./luamake/luamake -p ${{ matrix.plat }} -arch ${{ matrix.arch }}
      shell: bash
    - uses: actions/upload-artifact@v1.0.0
      with:
        name: lua-debug
        path: publish
  publish:
    runs-on: macOS-latest
    needs: compile
    steps:
      - uses: actions/download-artifact@v1.0.0
        with:
          name: lua-debug
          path: publish
      - run: npm install -g vsce
      - name: Publish
        working-directory: publish
        run: |
          chmod -v +x runtime/linux/lua5*/lua
          chmod -v +x runtime/macos/lua5*/lua
          chmod -v +x bin/linux/lua-debug
          chmod -v +x bin/macos/lua-debug
      - run: vsce publish -p ${{ secrets.VSCE_KEY }}
        working-directory: publish
        continue-on-error: true
