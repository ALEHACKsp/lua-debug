jobs:
- job: windows
  pool:
    vmImage: 'windows-latest'
  steps:
  - script: |
      choco install -y ninja
      refreshenv
    displayName: Init
  - script: |
      git submodule update --init --recursive
      git clone --depth 1 https://github.com/actboy168/luamake
      cd luamake
      git submodule update --init --recursive
      msvc_build.bat
      cd ..
    displayName: Compile luamake
  - script: |
      .\luamake\luamake
    displayName: Compile
  - task: CopyFiles@2
    inputs:
      Contents: '**'
      SourceFolder: 'publish'
      TargetFolder: '$(Build.ArtifactStagingDirectory)'
  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: $(Build.ArtifactStagingDirectory)
      artifactName: lua-debug

- job: macos
  pool:
    vmImage: 'macos-latest'
  steps:
  - bash: |
      sudo xcode-select -s /Applications/Xcode_10.2.app
      brew install ninja
    displayName: Init
  - bash: |
      git submodule update --init --recursive
      git clone --depth 1 https://github.com/actboy168/luamake
      cd luamake
      git submodule update --init --recursive
      ninja -f ninja/macos.ninja
      cd ..
    displayName: Compile luamake
  - bash: |
      ./luamake/luamake
    displayName: Compile
  - task: CopyFiles@2
    inputs:
      Contents: '**'
      SourceFolder: 'publish'
      TargetFolder: '$(Build.ArtifactStagingDirectory)'
  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: $(Build.ArtifactStagingDirectory)
      artifactName: lua-debug

- job: linux
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - bash: |
      sudo apt-get update
      sudo apt-get install -y libreadline-dev ninja-build
    displayName: Init
  - bash: |
      git submodule update --init --recursive
      git clone --depth 1 https://github.com/actboy168/luamake
      cd luamake
      git submodule update --init --recursive
      ninja -f ninja/linux.ninja
      cd ..
    displayName: Compile luamake
  - bash: |
      ./luamake/luamake
    displayName: Compile
  - task: CopyFiles@2
    inputs:
      Contents: '**'
      SourceFolder: 'publish'
      TargetFolder: '$(Build.ArtifactStagingDirectory)'
  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: $(Build.ArtifactStagingDirectory)
      artifactName: lua-debug
